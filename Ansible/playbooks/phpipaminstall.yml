---
- name: Install phpIPAM
  hosts: all
  become: true
  gather_facts: true
    
  tasks:
    - name: Install required packages
      package:
        name: 
          - php
          - php-mysql
          - php-curl
          - php-gd
          - php-intl
          - php-pear
          - php-imap
          - php-memcache
          - php-pspell
          - php-tidy
          - php-xmlrpc
          - php-mbstring
          - php-gmp
          - php-json
          - php-xml
          - php-fpm
          - git
          - mariadb-server
          - mariadb-client
          - apache2
          - libapache2-mod-php
          - php-curl
          - php-xmlrpc
          - php-intl
          - php-gd
        state: present
        update_cache: true

    - name: Enable and start MariaDB service
      ansible.builtin.service:
        name: mariadb
        enabled: true
        state: started

    - name: Create phpIPAM database and user
      command: >
        mysql -u root -e "
        CREATE DATABASE phpipam;
        GRANT ALL ON phpipam.* TO phpipam@localhost IDENTIFIED BY '{{ morpheus['customOptions']['phpipammysqlpw'] }}';
        FLUSH PRIVILEGES;"

    - name: Clone phpIPAM repository for Dev
      ansible.builtin.git:
        repo: https://github.com/phpipam/phpipam.git
        dest: /var/www/html/phpipam
        recursive: true
      when: morpheus['customOptions']['lifecyclestage'] == "Dev"

    - name: Download tgz for phpIPAM
      ansible.builtin.get_url:
        url: "{{ morpheus['customOptions']['prodversions'] }}"
        dest: "/tmp/phpipam.tgz"
      when: morpheus['customOptions']['lifecyclestage'] != "Dev"

    - name: Create the phpipam directory
      ansible.builtin.file:
        path: /var/www/html/phpipam
        state: directory
      when: morpheus['customOptions']['lifecyclestage'] != "Dev"

    - name: Extract phpIPAM
      ansible.builtin.unarchive:
        src: "/tmp/phpipam.tgz"
        dest: "/var/www/html/phpipam"
        extra_opts: [--strip-components=1]
        remote_src: true
      when: morpheus['customOptions']['lifecyclestage'] != "Dev"

    - name: Copy phpIPAM configuration file
      ansible.builtin.copy:
        src: /var/www/html/phpipam/config.dist.php
        dest: /var/www/html/phpipam/config.php
        remote_src: true

    - name: Replace line in file 
      replace:
        path: /var/www/html/phpipam/config.php
        regexp: "^\\$db\\['pass'\\] = 'phpipamadmin';"
        replace: "$db['pass'] = '{{ morpheus['customOptions']['phpipammysqlpw'] }}';"

    - name: Add allow_untested_php_versions config
      lineinfile:
        path: /var/www/html/phpipam/config.php  
        line: "$allow_untested_php_versions=true;"
        state: present

    - name: disable default virtual host  
      command:
        a2dissite 000-default.conf

    - name: rewrite
      command:
        a2enmod rewrite

    - name: ssl
      command:
        a2enmod ssl

    - openssl_privatekey:
        path: /etc/ssl/phpipam.key
        size: 2048 

    - openssl_csr:
        path: /etc/ssl/phpipam.csr
        privatekey_path: /etc/ssl/phpipam.key
        common_name: "{{ morpheus['server']['hostname'] }}"

    - openssl_certificate:
        provider: selfsigned
        path: /etc/ssl/phpipam.crt
        privatekey_path: /etc/ssl/phpipam.key
        csr_path: /etc/ssl/phpipam.csr

    - name: Check if phpipam.conf exists
      stat:
        path: /etc/apache2/sites-available/phpipam.conf
      register: phpipam_conf

    - name: Create apache2/sites-available directory if it doesn't exist
      file:
        path: /etc/apache2/sites-available
        state: directory
      when: not phpipam_conf.stat.exists

    - name: Create phpipam.conf if it doesn't exist
      copy:
        content: |
          # phpipam.conf

          <VirtualHost *:80>
              ServerAdmin admin@example.local
              DocumentRoot "/var/www/html/phpipam"
              ServerName {{ morpheus['server']['internalIp'] }}
              Redirect permanent / https://{{ morpheus['server']['internalIp'] }}/
              <Directory "/var/www/html/phpipam">
                  Options Indexes FollowSymLinks
                  AllowOverride All
                  Require all granted
              </Directory>
              ErrorLog "/var/log/apache2/phpipam-error_log"
              CustomLog "/var/log/apache2/phpipam-access_log" combined
          </VirtualHost>

          <VirtualHost *:443>
              ServerAdmin admin@example.local
              DocumentRoot "/var/www/html/phpipam"
              ServerName {{ morpheus['server']['internalIp'] }}
              <Directory "/var/www/html/phpipam">
                  Options Indexes FollowSymLinks
                  AllowOverride All
                  Require all granted
              </Directory>
              SSLEngine on
              SSLCertificateFile /etc/ssl/phpipam.crt
              SSLCertificateKeyFile /etc/ssl/phpipam.key
              ErrorLog "/var/log/apache2/phpipam-error_log"
              CustomLog "/var/log/apache2/phpipam-access_log" combined
          </VirtualHost>
        dest: /etc/apache2/sites-available/phpipam.conf
      when: not phpipam_conf.stat.exists

    - name: Enable phpIPAM site
      command: a2ensite phpipam

    - name: Restart Apache
      ansible.builtin.service:
        name: apache2  
        state: restarted

    - name: sql schema
      ansible.builtin.shell: mysql -u phpipam -p{{ morpheus['customOptions']['phpipammysqlpw'] }} phpipam < /var/www/html/phpipam/db/SCHEMA.sql
    
    - name: Output importent info 
      debug:
        msg:
          - "Access by Host Name: https://{{ morpheus['server']['hostname'] }}"
          - "Access by IP: https://{{ morpheus['server']['interfaces'][0]['ipAddress'] }}"
          - "Username: Admin"
          - "Password: ipamadmin"